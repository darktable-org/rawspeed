
name: CI

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

# FIXME: add no-openmp, and maybe -DCMAKE_BUILD_TYPE=Debug jobs

jobs:
  linux-fast:
    strategy:
      fail-fast: false
      matrix:
        os: [ linux ]
        compiler:
          - { distro: "debian:unstable-slim", family: GNU,  version: 12, CC: gcc-12,   CXX: g++-12 }
          - { distro: "debian:unstable-slim", family: LLVM, version: 15, CC: clang-15, CXX: clang++-15 }
        flavor: [ RelWithDebInfo, Release ]
    uses: ./.github/workflows/CI-linux.yml
    with:
      os: ${{ matrix.os }}
      distro: ${{ matrix.compiler.distro }}
      compiler-family: ${{ matrix.compiler.family }}
      compiler-version: ${{ matrix.compiler.version }}
      compiler-CC: ${{ matrix.compiler.CC }}
      compiler-CXX: ${{ matrix.compiler.CXX }}
      compiler-GCOV: ${{ matrix.compiler.GCOV }}
      compiler-CLANG_TIDY: ${{ matrix.compiler.CLANG_TIDY }}
      flavor: ${{ matrix.flavor }}
  linux-legacy:
    strategy:
      fail-fast: false
      matrix:
        os: [ linux ]
        compiler:
          - { distro: "debian:unstable-slim", family: GNU,  version: 11, CC: gcc-11,   CXX: g++-11 }
          - { distro: "debian:bullseye-slim", family: GNU,  version: 10, CC: gcc-10,   CXX: g++-10 }
          - { distro: "debian:unstable-slim", family: LLVM, version: 14, CC: clang-14, CXX: clang++-14 }
          - { distro: "debian:unstable-slim", family: LLVM, version: 13, CC: clang-13, CXX: clang++-13 }
          - { distro: "ubuntu:jammy",         family: LLVM, version: 12, CC: clang-12, CXX: clang++-12 }
          - { distro: "debian:bullseye-slim", family: LLVM, version: 11, CC: clang-11, CXX: clang++-11 }
        flavor: [ RelWithDebInfo, Release ]
    uses: ./.github/workflows/CI-linux.yml
    with:
      os: ${{ matrix.os }}
      distro: ${{ matrix.compiler.distro }}
      compiler-family: ${{ matrix.compiler.family }}
      compiler-version: ${{ matrix.compiler.version }}
      compiler-CC: ${{ matrix.compiler.CC }}
      compiler-CXX: ${{ matrix.compiler.CXX }}
      compiler-GCOV: ${{ matrix.compiler.GCOV }}
      compiler-CLANG_TIDY: ${{ matrix.compiler.CLANG_TIDY }}
      flavor: ${{ matrix.flavor }}
  linux-static-analysis:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: linux
            compiler: { distro: "debian:unstable", family: LLVM, version: 15, CC: clang-15, CXX: clang++-15, CLANG_TIDY: clang-tidy-15 }
            flavor: ClangTidy
          - os: linux
            compiler: { distro: "debian:unstable", family: LLVM, version: 15, CC: clang-15, CXX: clang++-15 }
            flavor: ClangStaticAnalysis
          - os: linux
            compiler: { distro: "debian:unstable", family: LLVM, version: 15, CC: clang-15, CXX: clang++-15 }
            flavor: CodeQLAnalysis
    uses: ./.github/workflows/CI-linux.yml
    with:
      os: ${{ matrix.os }}
      distro: ${{ matrix.compiler.distro }}
      compiler-family: ${{ matrix.compiler.family }}
      compiler-version: ${{ matrix.compiler.version }}
      compiler-CC: ${{ matrix.compiler.CC }}
      compiler-CXX: ${{ matrix.compiler.CXX }}
      compiler-GCOV: ${{ matrix.compiler.GCOV }}
      compiler-CLANG_TIDY: ${{ matrix.compiler.CLANG_TIDY }}
      flavor: ${{ matrix.flavor }}
      ECO: -DBUILD_BENCHMARKING=OFF
  linux-coverage:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: linux
            compiler: { distro: "debian:unstable", family: GNU, version: 12, CC: gcc-12, CXX: g++-12, GCOV: gcov-12 }
            flavor: Coverage
    uses: ./.github/workflows/CI-linux.yml
    with:
      os: ${{ matrix.os }}
      distro: ${{ matrix.compiler.distro }}
      compiler-family: ${{ matrix.compiler.family }}
      compiler-version: ${{ matrix.compiler.version }}
      compiler-CC: ${{ matrix.compiler.CC }}
      compiler-CXX: ${{ matrix.compiler.CXX }}
      compiler-GCOV: ${{ matrix.compiler.GCOV }}
      compiler-CLANG_TIDY: ${{ matrix.compiler.CLANG_TIDY }}
      flavor: ${{ matrix.flavor }}
  linux-sonarcloud-static-analysis:
    if: github.repository == 'darktable-org/rawspeed' && github.event_name != 'pull_request' && github.ref_type == 'branch' && github.ref_name == 'develop'
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: linux
            compiler: { distro: "debian:unstable", family: LLVM, version: 15, CC: clang-15, CXX: clang++-15 }
            flavor: SonarCloudStaticAnalysis
    uses: ./.github/workflows/CI-linux.yml
    with:
      os: ${{ matrix.os }}
      distro: ${{ matrix.compiler.distro }}
      compiler-family: ${{ matrix.compiler.family }}
      compiler-version: ${{ matrix.compiler.version }}
      compiler-CC: ${{ matrix.compiler.CC }}
      compiler-CXX: ${{ matrix.compiler.CXX }}
      compiler-GCOV: ${{ matrix.compiler.GCOV }}
      compiler-CLANG_TIDY: ${{ matrix.compiler.CLANG_TIDY }}
      flavor: ${{ matrix.flavor }}
    secrets:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
      SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
  windows-msys2-fast:
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest ]
        msys2:
          - { msystem: MINGW64,    arch: x86_64,  family: GNU,  CC: gcc,   CXX: g++ }
          - { msystem: MINGW32,    arch: i686,    family: GNU,  CC: gcc,   CXX: g++ }
          - { msystem: CLANG64,    arch: x86_64,  family: LLVM, CC: clang, CXX: clang++ }
          - { msystem: CLANG32,    arch: i686,    family: LLVM, CC: clang, CXX: clang++ }
          - { msystem: UCRT64,     arch: x86_64,  family: GNU,  CC: gcc,   CXX: g++ }
        flavor: [ RelWithDebInfo, Release ]
    uses: ./.github/workflows/CI-windows-msys2.yml
    with:
      os: ${{ matrix.os }}
      msys2-msystem: ${{ matrix.msys2.msystem }}
      msys2-arch: ${{ matrix.msys2.arch }}
      compiler-family: ${{ matrix.msys2.family }}
      compiler-CC: ${{ matrix.msys2.CC }}
      compiler-CXX: ${{ matrix.msys2.CXX }}
      flavor: ${{ matrix.flavor }}
  windows-msys2-coverage:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            msys2: { msystem: MINGW64, arch: x86_64, family: GNU, CC: gcc, CXX: g++ }
            flavor: Coverage
    uses: ./.github/workflows/CI-windows-msys2.yml
    with:
      os: ${{ matrix.os }}
      msys2-msystem: ${{ matrix.msys2.msystem }}
      msys2-arch: ${{ matrix.msys2.arch }}
      compiler-family: ${{ matrix.msys2.family }}
      compiler-CC: ${{ matrix.msys2.CC }}
      compiler-CXX: ${{ matrix.msys2.CXX }}
      flavor: ${{ matrix.flavor }}
      ECO: -DBUILD_BENCHMARKING=OFF
  macOS-fast:
    strategy:
      fail-fast: false
      matrix:
        compiler:
          - { os: macos-12, family: XCode, version: 14.1, deployment_target: 14.1, CC: cc, CXX: c++ } # LLVM14
        flavor: [ RelWithDebInfo, Release ]
    uses: ./.github/workflows/CI-macOS.yml
    with:
      os: ${{ matrix.compiler.os }}
      os-deployment_target: ${{ matrix.compiler.deployment_target }}
      compiler-family: ${{ matrix.compiler.family }}
      compiler-version: ${{ matrix.compiler.version }}
      compiler-CC: ${{ matrix.compiler.CC }}
      compiler-CXX: ${{ matrix.compiler.CXX }}
      flavor: ${{ matrix.flavor }}
  macOS-legacy:
    strategy:
      fail-fast: false
      matrix:
        compiler:
          - { os: macos-12, family: XCode, version: 14.1,   deployment_target: 10.7,   CC: cc, CXX: c++ } # LLVM14
          - { os: macos-12, family: XCode, version: 13.4.1, deployment_target: 13.4.1, CC: cc, CXX: c++ } # LLVM13
          - { os: macos-12, family: XCode, version: 13.2.1, deployment_target: 13.2.1, CC: cc, CXX: c++ } # LLVM12
          - { os: macos-11, family: XCode, version: 12.5.1, deployment_target: 12.5.1, CC: cc, CXX: c++ } # LLVM11
          - { os: macos-11, family: XCode, version: 12.4,   deployment_target: 12.4,   CC: cc, CXX: c++ } # LLVM10
        flavor: [ RelWithDebInfo, Release ]
    uses: ./.github/workflows/CI-macOS.yml
    with:
      os: ${{ matrix.compiler.os }}
      os-deployment_target: ${{ matrix.compiler.deployment_target }}
      compiler-family: ${{ matrix.compiler.family }}
      compiler-version: ${{ matrix.compiler.version }}
      compiler-CC: ${{ matrix.compiler.CC }}
      compiler-CXX: ${{ matrix.compiler.CXX }}
      flavor: ${{ matrix.flavor }}
  macOS-coverage:
    strategy:
      fail-fast: false
      matrix:
        include:
          - compiler: { os: macos-12, family: XCode, version: 14.1, deployment_target: 14.1, CC: cc, CXX: c++ } # LLVM14
            flavor: Coverage
    uses: ./.github/workflows/CI-macOS.yml
    with:
      os: ${{ matrix.compiler.os }}
      os-deployment_target: ${{ matrix.compiler.deployment_target }}
      compiler-family: ${{ matrix.compiler.family }}
      compiler-version: ${{ matrix.compiler.version }}
      compiler-CC: ${{ matrix.compiler.CC }}
      compiler-CXX: ${{ matrix.compiler.CXX }}
      flavor: ${{ matrix.flavor }}
